/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer







/ {
    combos {
        compatible = "zmk,combos";

        Undo {
            bindings = <&kp LG(Z)>;
            key-positions = <13 14>;
        };

        Backspace {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <31 30>;
        };

        Delete {
            bindings = <&kp LA(DELETE)>;
            key-positions = <29 28>;
        };
    };

    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings =
                <&mo>,
                <&tog>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&macro_press>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
                           &kp ESC  &kp N1         &kp N2             &kp N3      &kp N4        &kp N5                                   &kp N6         &kp N7     &kp N8            &kp N9         &kp N0                         &kp F11
                           &kp TAB   &kp Q          &kp W              &kp F       &kp P         &kp G                                    &kp J          &kp L      &kp U             &kp Y  &kp SEMICOLON                         &kp F12
 &mt LEFT_CONTROL LEFT_PARENTHESIS   &kp A          &kp R              &kp S       &kp T         &kp D                                    &kp H          &kp N      &kp E             &kp I          &kp O  &mt RIGHT_CONTROL SINGLE_QUOTE
           &mt LEFT_ALT LEFT_BRACE   &kp Z          &kp X              &kp C       &kp V         &kp B  &kp C_MUTE  &kt LEFT_SHIFT        &kp K          &kp M  &kp COMMA           &kp DOT       &kp FSLH         &mt RIGHT_ALT BACKSLASH
                                            &kp C_AC_BACK  &kp K_APPLICATION  &kp DELETE    &kp LSHIFT  &kp LEFT_GUI           &mo_tog 1 1  &kp SPACE  &kp BACKSPACE  &kp ENTER  &kp C_AC_FORWARD
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp RIGHT LEFT>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
                        &kp C_SLEEP     &kp F1            &kp F2     &kp F3             &kp F4     &kp F5                        &kp F6       &kp F7     &kp F8         &kp F9        &kp F10  &kp F11
                             &trans     &trans          &kp PIPE  &kp EQUAL     &kp UNDERSCORE     &trans                        &trans     &kp HOME     &kp UP        &kp END         &trans  &kp F12
 &mt LEFT_CONTROL RIGHT_PARENTHESIS  &kp TILDE     &kp LESS_THAN  &kp MINUS   &kp GREATER_THAN  &kp GRAVE                  &kp LA(LEFT)     &kp LEFT   &kp DOWN      &kp RIGHT  &kp RA(RIGHT)   &trans
           &mt LEFT_ALT RIGHT_BRACE     &trans  &kp LEFT_BRACKET   &kp PLUS  &kp RIGHT_BRACKET     &trans  &trans  &trans   &bootloader  &kp PAGE_UP  &kp ENTER  &kp PAGE_DOWN         &trans   &trans
                                                          &trans     &trans             &trans     &trans  &trans  &trans        &trans       &trans     &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
